{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json"
    },
    "plugins": ["@typescript-eslint"],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/strict-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked",
        "prettier"
    ],
    "ignorePatterns": ["*.config.js", "*.config.mjs", "src/types/supabase.ts"],
    "env": {
        "node": true,
        "browser": true
    },
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "overrides": [
        {
            "files": ["src/pages/**/*"],
            "extends": ["next"]
        },
        {
            "files": ["src/pages/**/*", "*.config.ts"],
            "rules": {
                "import/no-default-export": "off"
            }
        },
        {
            "files": ["*.tsx"],
            "extends": [
                "plugin:react/recommended",
                "plugin:react/jsx-runtime",
                "plugin:react-hooks/recommended"
            ],
            "rules": {
                "@typescript-eslint/explicit-function-return-type": "off"
            }
        },
        {
            "files": ["*.test.ts", "*.test.tsx"],
            "plugins": ["jest"],
            "env": {
                "jest": true
            },
            "extends": ["plugin:jest/recommended", "plugin:jest/style"],
            "rules": {
                "@typescript-eslint/consistent-type-imports": "off",
                "@typescript-eslint/no-unsafe-assignment": "off",
                "jest/consistent-test-it": ["error", { "fn": "it" }],
                "jest/max-expects": ["warn", { "max": 3 }],
                "jest/max-nested-describe": ["error", { "max": 3 }],
                "jest/no-conditional-in-test": "error",
                "jest/no-confusing-set-timeout": "error",
                "jest/no-duplicate-hooks": "error",
                "jest/no-test-return-statement": "error",
                "jest/no-untyped-mock-factory": "warn",
                "jest/prefer-called-with": "warn",
                "jest/prefer-comparison-matcher": "error",
                "jest/prefer-equality-matcher": "error",
                "jest/prefer-expect-assertions": [
                    "warn",
                    { "onlyFunctionsWithAsyncKeyword": true }
                ],
                "jest/prefer-expect-resolves": "warn",
                "jest/prefer-hooks-in-order": "error",
                "jest/prefer-hooks-on-top": "error",
                "jest/prefer-lowercase-title": "error",
                "jest/prefer-mock-promise-shorthand": "error",
                "jest/prefer-spy-on": "warn",
                "jest/prefer-strict-equal": "error",
                "jest/require-hook": "warn",
                "jest/require-to-throw-message": "error",
                "jest/require-top-level-describe": "error"
            }
        },
        {
            "files": ["*.test.tsx"],
            "extends": ["plugin:testing-library/react"],
            "rules": {
                "testing-library/prefer-explicit-assert": [
                    "error",
                    {
                        "assertion": "toBeInTheDocument",
                        "includeFindQueries": true
                    }
                ],
                "testing-library/prefer-user-event": "error"
            }
        },
        {
            "files": ["*.d.ts"],
            "rules": {
                "@typescript-eslint/consistent-type-definitions": "off"
            }
        }
    ],
    "rules": {
        "@typescript-eslint/consistent-type-definitions": ["error", "type"],
        "@typescript-eslint/consistent-type-imports": [
            "warn",
            {
                "prefer": "type-imports",
                "fixStyle": "inline-type-imports"
            }
        ],
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "typeParameter",
                "format": ["PascalCase"],
                "custom": {
                    "regex": "^[A-Z]\\w{1,}",
                    "match": true
                }
            },
            {
                "selector": "typeLike",
                "format": ["PascalCase"],
                "custom": {
                    "regex": "^[A-Z]\\w{1,}",
                    "match": true
                }
            },
            {
                "selector": "variable",
                "types": ["boolean"],
                "format": ["PascalCase"],
                "prefix": ["is", "should", "has", "can", "did"]
            }
        ],
        "@typescript-eslint/prefer-nullish-coalescing": [
            "error",
            {
                "ignorePrimitives": true
            }
        ],
        "import/no-default-export": "error",
        "react/boolean-prop-naming": [
            "error",
            {
                "rule": "^(is|has)[A-Z]\\w+"
            }
        ],
        "react/hook-use-state": [
            "error",
            {
                "allowDestructuredState": true
            }
        ],
        "react/jsx-handler-names": [
            "warn",
            {
                "checkInlineFunction": true,
                "checkLocalVariables": true,
                "eventHandlerPrefix": "handle|set|reset|open|close|toggle|on",
                "eventHandlerPropPrefix": "on"
            }
        ],
        "react/jsx-max-depth": ["warn", { "max": 6 }],
        "react/jsx-no-useless-fragment": "error",
        "react/jsx-sort-props": [
            "warn",
            {
                "reservedFirst": true,
                "shorthandFirst": true,
                "ignoreCase": false
            }
        ],
        "react/void-dom-elements-no-children": ["error"],
        "sort-keys": [
            "warn",
            "asc",
            { "caseSensitive": true, "natural": true, "minKeys": 2 }
        ]
    }
}
